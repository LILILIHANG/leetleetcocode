# 0,1,···,n-1这n个数字排成一个圆圈，从数字0开始，每次从这个圆圈里删除第m个数字（删除后从下一个数字开始计数）。求出这个圆圈里剩下的最后一个数字。
#约瑟夫环问题
#设解为最后剩下的数字f（n）
#f(n) 可由f(n−1) 得到，f(n−1) 可由f(n−2) 得到，……，f(2) 可由 f(1) 得到；因此，若给定 f(1) 的值，就可以递推至任意 f(n)。
# 而[1,m]问题的解(1)=0 恒成立，即无论 m 为何值，长度为 1 的数字环留下的是一定是数字 0
# 递推公式为f(i)=(f(i-1)+m)%i。

class Solution:
    def lastRemaining(self, n: int, m: int) -> int:
        x = 0
        for i in range(2, n + 1):
            x = (x + m) % i
        return x